AWSTemplateFormatVersion: "2010-09-09"
Description: "Life Cycle for zero downtime ECS"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Stack"
        Parameters:
          - StackName
Parameters:
  StackName:
    Type: String
    Default: stack
    Description: "This name will be used to named the resources"
  S3BucketName:
    Type: String
    Default: ""
    Description: "Name of the S3 Bucket"
  S3Key:
    Type: String
    Default: ""
    Description: "Locaction of the Lambda code example: compute/index.zip"
  ASGTemplateURL:
    Type: String
    Default: ""
    Description: "Template URL"
  EC2TemplateURL:
    Type: String
    Default: ""
    Description: "Template URL"
  LBTemplateURL:
    Type: String
    Default: ""
    Description: "Template URL"
  SNSTopicARN:
    Type: String
    Default: ""
    Description: "Topic ARN" 

Resources:
  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3Key
      Runtime: python3.7
      Role: !GetAtt LambdaRole.Arn
      Timeout: 600
      Handler: "index.lambda_handler"
      Environment:
        Variables:
          ASGTemplate: !Ref ASGTemplateURL
          EC2Template: !Ref EC2TemplateURL
          LBTemplate: !Ref LBTemplateURL
          SNSTopic: !Ref SNSTopicARN

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: Lambda-Permissions
          PolicyDocument:
            Statement:
            - 
              Effect: Allow
              Action:
                - "s3:GetObjectVersionTagging"
                - "s3:GetObjectAcl"
                - "logs:CreateLogStream"
                - "cloudwatch:DescribeAlarmsForMetric"
                - "cloudwatch:ListDashboards"
                - "cloudwatch:ListTagsForResource"
                - "s3:GetObjectVersionAcl"
                - "s3:HeadBucket"
                - "s3:GetBucketPolicyStatus"
                - "cloudwatch:GetDashboard"
                - "s3:GetBucketWebsite"
                - "s3:ListJobs"
                - "sns:CreateTopic"
                - "s3:GetBucketNotification"
                - "cloudwatch:GetMetricStatistics"
                - "logs:CreateLogGroup"
                - "s3:GetReplicationConfiguration"
                - "s3:ListMultipartUploadParts"
                - "s3:GetObject"
                - "s3:DescribeJob"
                - "cloudwatch:DescribeAlarms"
                - "s3:GetAnalyticsConfiguration"
                - "s3:GetObjectVersionForReplication"
                - "s3:ListBucketByTags"
                - "s3:GetLifecycleConfiguration"
                - "s3:GetBucketTagging"
                - "s3:GetInventoryConfiguration"
                - "cloudwatch:GetMetricData"
                - "s3:ListBucketVersions"
                - "s3:GetBucketLogging"
                - "s3:ListBucket"
                - "s3:GetAccelerateConfiguration"
                - "s3:GetBucketPolicy"
                - "cloudwatch:ListMetrics"
                - "cloudwatch:DescribeAnomalyDetectors"
                - "s3:GetObjectVersionTorrent"
                - "s3:GetEncryptionConfiguration"
                - "cloudwatch:DescribeAlarmHistory"
                - "s3:GetBucketRequestPayment"
                - "s3:GetObjectTagging"
                - "s3:GetMetricsConfiguration"
                - "cloudwatch:SetAlarmState"
                - "cloudwatch:GetMetricWidgetImage"
                - "s3:GetBucketPublicAccessBlock"
                - "s3:ListBucketMultipartUploads"
                - "s3:GetBucketVersioning"
                - "s3:GetBucketAcl"
                - "logs:PutLogEvents"
                - "cloudwatch:PutMetricAlarm"
                - "s3:GetObjectTorrent"
                - "s3:GetAccountPublicAccessBlock"
                - "s3:ListAllMyBuckets"
                - "cloudformation:CreateStack"
                - "s3:GetBucketCORS"
                - "s3:GetBucketLocation"
                - "s3:GetObjectVersion"
              Resource: '*'
Outputs:
  TriggerFunctionName:
    Description: Lambda function name
    Value: !Ref LambdaFunction
  TriggerFunctionARN:
    Description: Lambda function name
    Value: !GetAtt LambdaFunction.Arn