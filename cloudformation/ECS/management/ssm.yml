AWSTemplateFormatVersion: "2010-09-09"
Description: >
  System Manager Resources to do
  Patching to Operating Systems
  Patching custom AMIs
Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - production
      - cproduction
      - staging
      - development
  StackName:
    Type: String
    Default: demo
    Description: This name will be used to named the resources
  AMI:
    Type: AWS::EC2::Image::Id
    Default: ami-015cd62e9cc8c5000
    Description: The AMI source Id to apply patching
Resources:
  ############### Roles ##############
  SSMServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: passrole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ssm:CancelCommand
                - ssm:GetCommandInvocation
                - ssm:ListCommandInvocations
                - ssm:ListCommands
                - ssm:SendCommand
                - ssm:GetAutomationExecution
                - ssm:GetParameters
                - ssm:StartAutomationExecution
              Resource:
                - "*"
            - Effect: Allow
              Action:
                - ec2:DescribeInstanceAttribute
                - ec2:DescribeInstanceStatus
                - ec2:DescribeInstances
              Resource:
                - "*"
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - arn:aws:lambda:*:*:function:SSM*
                - arn:aws:lambda:*:*:function:*:SSM*
            - Effect: Allow
              Action:
                - states:DescribeExecution
                - states:StartExecution
              Resource:
                - arn:aws:states:*:*:stateMachine:SSM*
                - arn:aws:states:*:*:execution:SSM*
            - Effect: Allow
              Action:
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
              Resource:
                - "*"
            - Effect: Allow
              Action:
                - tag:GetResources
              Resource:
                - "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: "*"
              Condition:
                StringEquals:
                  iam:PassedToService:
                  - ssm.amazonaws.com

  # Role for Instance used to create AMI
  ManagedInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: "/"
  ManagedInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref ManagedInstanceRole
      InstanceProfileName: ManagedInstanceProfile 
  AutomationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      Path: "/"
      Policies:
      - PolicyName: passrole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:
            - !GetAtt ManagedInstanceRole.Arn
  ########## Patch Baseline ##########
  PatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      Name: Amazon_Linux_PatchBaseline
      Description: Patch Baseline for Amazon Linux Instances following nclouds policies
      OperatingSystem: AMAZON_LINUX
      PatchGroups:
        - AMZ-Linux
      ApprovalRules:
        PatchRules:
        - ApproveAfterDays: 0
          ComplianceLevel: CRITICAL
          EnableNonSecurity: true
          PatchFilterGroup:
            PatchFilters:
            - Key: PRODUCT
              Values:
              - '*'
            - Key: CLASSIFICATION
              Values:
              - Security
              - Bugfix
              - Enhancement
              - Recommended
            - Key: SEVERITY
              Values:
              - Critical
              - Important
              - Medium
              - Low
  ######### MaintenanceWindow ########
  MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      Name: Security_Patches_Updates
      Description: "A Maintenance window for applying patches"
      AllowUnassociatedTargets: true
      Schedule: cron(0 * ? * SUN *)
      Duration: 1
      Cutoff: 0
  MaintenanceWindowTargets:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      Name: Patching_Targets
      Description: Targets for security patches
      WindowId: !Ref MaintenanceWindow
      ResourceType: INSTANCE
      Targets: 
        - Key: tag:Patch Group
          Values:
            - AMZ-Linux
    DependsOn: MaintenanceWindow
  PatchMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: Patching_Task
      Description: Installs security patches
      MaxErrors: 0
      ServiceRoleArn: !GetAtt SSMServiceRole.Arn
      Priority: 1
      MaxConcurrency: 20
      Targets: 
        - Key: WindowTargetIds 
          Values:
            - !Ref MaintenanceWindowTargets
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          Parameters:
            {
              "Operation": [
                "Install"
              ]
            }
          # OutputS3BucketName: String
          # OutputS3KeyPrefix: String
      WindowId: !Ref MaintenanceWindow
      TaskType: RUN_COMMAND
    DependsOn: MaintenanceWindow
  UpdateAmiMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: UpdateAmi_Task
      Description: Updates custom AMIs
      MaxErrors: 0
      ServiceRoleArn: !GetAtt SSMServiceRole.Arn
      Priority: 1
      MaxConcurrency: 20
      Targets: 
        - Key: InstanceIds 
          Values:
            - i-00000000000000000
      TaskArn: AWS-UpdateLinuxAmi
      TaskInvocationParameters:
        MaintenanceWindowAutomationParameters:
          Parameters:
            {
              "AutomationAssumeRole": [{"Fn::GetAtt": ["AutomationServiceRole", "Arn"]}],
              "ExcludePackages": ["none"],
              "IamInstanceProfileName": [{"Ref": "ManagedInstanceProfile"}],
              "IncludePackages": ["all"],
              "InstanceType": ["t2.micro"],
              "PostUpdateScript": ["none"],
              "PreUpdateScript": ["none"],
              "SourceAmiId": [{"Ref": "AMI"}],
              "TargetAmiName": ["UpdateLinuxAmi_from_{{SourceAmiId}}_on_{{global:DATE_TIME}}"]
            }
      WindowId: !Ref MaintenanceWindow
      TaskType: AUTOMATION
    DependsOn: MaintenanceWindow
Outputs:
  SSMPatchBaseline:
    Value: !Ref PatchBaseline