AWSTemplateFormatVersion: "2010-09-09"
Description: >
  ECS Cluster with monitoring tools, including DataDog, CloudWatch Logs and Systems Manager.
Parameters:
  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: "(\\d{1,3}\\.){3}\\d{1,3}/(\\d{1,2})"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Description: CIDR Block for the VPC
  Certificate:
    Type: String
    Default: ""
    Description: SSL Certificate ARN
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Default: ronaldo
    Description: Public/private key pairs allow you to securely connect to your instance after it launches
  QSS3BucketName:
    Type: String
    Default: l2-demo
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
  QSS3KeyPrefix:
    Type: String
    Default: L2-Demo
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a hyphen (-)."
  StackName:
    Type: String
    Default: L2-Demo
    Description: This will be used to name the resources
  Environment:
    Type: String
    Default: Dev
    AllowedValues: [Prod, Stage, Dev]
Resources: 
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/network/vpc.yml"
      Parameters:
        AvailabilityZones: !Join [ ",", !GetAZs '']
        VPCCIDR: !Ref VPCCIDR
        StackName: !Ref StackName
        Environment: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
  S3Bucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/datastore/s3.yml"
      Parameters:
        StackName: !Ref StackName
        Environment: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/infrastructure/load-balancers.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        SubnetsIds: !Join [ ",", [!GetAtt VPC.Outputs.PublicSubnet1ID, !GetAtt VPC.Outputs.PublicSubnet2ID]]
        CertificateArn: !Ref Certificate
        S3BucketLogs: !GetAtt S3Bucket.Outputs.BucketName
        StackName: !Ref StackName
        Environment: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/infrastructure/ecs-cluster.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        SubnetsIds: !Join [ ",", [!GetAtt VPC.Outputs.PrivateSubnet1AID, !GetAtt VPC.Outputs.PrivateSubnet2AID]]
        ALBSecurityGroup: !GetAtt ALB.Outputs.SecurityGroupId
        ALBDNS: !GetAtt ALB.Outputs.LoadBalancerDomain
        ClusterName: L2-Demo-App
        # DataDogAPIKey: !Ref DataDogAPIKey
        InstanceType: t2.small
        # ECSAMI:
        DesiredCapacity: 1
        MinSize: 1
        MaxSize: 3
        MinInstancesInService: 1
        MaxBatchSize: 2
        PauseTime: PT5M
        KeyPair: !Ref KeyPair        
        Environment: !Ref Environment
        StackName: !Ref StackName
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
    DependsOn:
      - VPC  
  BlueAppService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/infrastructure/service.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 1
        HttpListenerArn: !GetAtt ALB.Outputs.BlueHttpListenerArn
        AlternateHttpListenerArn: !GetAtt ALB.Outputs.GreenHttpListenerArn
        HttpsListenerArn: "" #!GetAtt ALB.Outputs.HttpsListenerArn
        RepositoryName: goapp
        ImageTag: latest
        ContainerPort: 8080
        DBEndpoint: !GetAtt DB.Outputs.DBEndpoint
        Environment: !Ref Environment
        StackName: !Ref StackName
        # DataDogAPIKey: !Ref DataDogAPIKey
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
    DependsOn:
      - DB
  GreenAppService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/infrastructure/service.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 1
        HttpListenerArn: !GetAtt ALB.Outputs.GreenHttpListenerArn
        AlternateHttpListenerArn: !GetAtt ALB.Outputs.BlueHttpListenerArn
        HttpsListenerArn: "" #!GetAtt ALB.Outputs.HttpsListenerArn
        RepositoryName: goapp
        ImageTag: latest
        ContainerPort: 8080
        DBEndpoint: !GetAtt DB.Outputs.DBEndpoint
        Environment: !Ref Environment
        StackName: !Ref StackName
        # DataDogAPIKey: !Ref DataDogAPIKey
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
    DependsOn:
      - DB
  DDService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/infrastructure/ddservice.yml"
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        RepositoryName: datadog/agent
        Family: datadog
        ImageTag: latest
        # DataDogAPIKey: 
        Environment: !Ref Environment
        StackName: !Ref StackName
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
    DependsOn:
      - DB
  # Parameters /L2-Demo/DB_USER and /L2-Demo/DB_PASSWORD must exist on SSM
  DB:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Retain
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/datastore/database.yml"
      Parameters:
        DBClass: db.t2.small
        DBAllocatedStorage: 20
        VPCId: !GetAtt VPC.Outputs.VPCID
        SubnetIds: !Join [ ",", [!GetAtt VPC.Outputs.PrivateSubnet1AID, !GetAtt VPC.Outputs.PrivateSubnet2AID]]
        Environment: !Ref Environment
        StackName: !Ref StackName
        EC2SecurityGroup: !GetAtt ECS.Outputs.SecurityGroup
      Tags:
        - Key: Environment
          Value: !Sub ${StackName}-${Environment}
  
  # RedisStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/datastore/elasticache.yml"
  #     Parameters:
  #       VPCSubnets: !Join [ ",", [!GetAtt [VPC, Outputs.PrivateSubnet1AID], !GetAtt [VPC, Outputs.PrivateSubnet2AID]]]
  #       VpcId: !GetAtt VPC.Outputs.VPCID
  #       StackName: !Ref StackName
  #       Environment: !Ref Environment
  #       EC2SecurityGroup: !GetAtt ECS.Outputs.SecurityGroup
  #     Tags:
  #       - Key: StackName
  #         Value: !Sub ${StackName}-${Environment}

  SSM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/management/ssm.yml"
      Parameters:
        ASGName: !GetAtt ECS.Outputs.AutoScalingGroupName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        Environment: !Ref Environment
        StackName: !Ref StackName
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}
  Jenkins:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/continuous-integration/master.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        PublicSubnetsIds: !Join [ ",", [!GetAtt [VPC, Outputs.PublicSubnet1ID], !GetAtt [VPC, Outputs.PublicSubnet2ID]]]
        PrivateSubnetsIds: !Join [ ",", [!GetAtt [VPC, Outputs.PrivateSubnet1AID], !GetAtt [VPC, Outputs.PrivateSubnet2AID]]]
        ClusterName: Jenkins
        KeyPair: !Ref KeyPair
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub ${QSS3KeyPrefix}/continuous-integration
        StackName: !Ref StackName
        Environment: Dev
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}
  Clair:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/coreos-clair/clair-template.yml"
      Parameters:
        VpcId: !GetAtt VPC.Outputs.VPCID
        PublicSubnets: !Join [ ",", [!GetAtt [VPC, Outputs.PublicSubnet1ID], !GetAtt [VPC, Outputs.PublicSubnet2ID]]]
        PrivateSubnets: !Join [ ",", [!GetAtt [VPC, Outputs.PrivateSubnet1AID], !GetAtt [VPC, Outputs.PrivateSubnet2AID]]]
        ECSClusterName: CoreOS-Clair
        ECRRepositoryUri: 695292474035.dkr.ecr.us-west-2.amazonaws.com/coreos-clair:latest
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}