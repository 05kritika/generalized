AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ################ Template parameters ################
  S3Bucket:
    Type: String
    Description: S3 bucket where macro code is stored
  S3Key:
    Type: String
    Description: Prefix and name of the zip file where code is stored
  RuntimeEnv:
    Type: String
    Description: Runtime for the lambda function
  FunctionName:
    Type: String
    Description: name of the function to use as transform
  ################ Tagging parameters ################
  OwnerName:
    Type: String
    Description: An arbitrary tag name for the owner of these resources
  StackName:
    Type: String
    Description: The name of the stack to which these resources belong
  Environment:
    Type: String
    Default: dev
    AllowedValues: [ prod, staging, dev, qa ]
    Description: Environment name to append to resources names and tags
Resources:
  ################ Execution Role ################
  TransformExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ['logs:*']
                Resource: 'arn:aws:logs:*:*:*'
  ################ Lambda function ################
  TransformFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Handler: lambda.handler
      Runtime: !Ref RuntimeEnv
      Role: !GetAtt TransformExecutionRole.Arn
  ################ Transform Permission ################
  TransformFunctionPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt TransformFunction.Arn
      Principal: 'cloudformation.amazonaws.com'
  ################ Transform Macro ################
  Transform:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: !Ref FunctionName
      Description: Function to deploy for transform
      FunctionName: !GetAtt TransformFunction.Arn
Outputs:
  MacroLambda:
    Description: Lambda that transforms the template
    Value: !GetAtt TransformFunction.Arn