AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Lambda Function to clean up resources

Parameters:
  BucketS3:
    Type: String
    Description: S3 Bucket where Lambda clean code is hosted
  
  TimeOut:
    Type: Number
    Default: 900
    AllowedValues: [ 300, 600, 900]
    Description: Time out to execute lambda function

  EmailAddress:
    Type: String
    Default: saqib@nclouds.com
    Description: Email address to notify clean up result
  
  Environment:
    Type: String
    Default: Test
    AllowedValues: [Test, Prod]
    Description: select an option for the type of execution

  OwnerName:
    Type: String
    Default: saqib
    Description: An arbitrary tag name for the owner of these resources, just lowercase names
  
  Team:
    Type: String
    Default: layer2
    Description: name of the team which these resources belong, just lowercase names

  Client:
    Type: String
    Default: nclouds
    Description: name of the Client, just lowercase names
  
  StackName:
    Type: String
    Description: The name of the stack to which these resources belong

Resources:

  ########## CleanUp Role ##########       
  CleanUpRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Name
          Value: !Sub role-clean-rds-${Team}-${Client}-${StackName}
        - Key: OwnerName
          Value: !Ref OwnerName
        - Key: StackName
          Value: !Ref StackName
        - Key: Team
          Value: !Ref Team
        - Key: Client
          Value: !Ref Client

  ########## Lambda Code Cleaning ##########
  Cleaning:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function that terminates rds resources
      Handler: rds_lambda.lambda_handler
      Role: !GetAtt [ CleanUpRole, Arn ]
      Runtime: python3.6
      FunctionName: !Sub cleanup-rds-${Team}-${Client}-${StackName}
      Timeout: !Ref TimeOut
      Environment:
        Variables:
          env: !Ref Environment
      Code:
        S3Bucket: !Ref BucketS3
        S3Key: RDS/code/lambda.zip
      Tags:
        - Key: Name
          Value: !Sub cleanup-rds-${Team}-${Client}-${StackName}
        - Key: OwnerName
          Value: !Ref OwnerName
        - Key: StackName
          Value: !Ref StackName
        - Key: Team
          Value: !Ref Team
        - Key: Client
          Value: !Ref Client
Outputs:
  RdsFunction:
    Description: Lambda function cleans rds
    Value: !GetAtt Cleaning.Arn