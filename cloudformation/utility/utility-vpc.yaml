AWSTemplateFormatVersion: '2010-09-09'
Description: Template for creating the VPC
Outputs:
  VpcId:
    Description: VPC created
    Value: !Ref 'VPC'
  pubsub1:
    Description: Public subnet 1 from  VPC
    Value: !Ref 'PublicSubnet1'
  pubsub2:
    Description: Public subnet 2 from  VPC
    Value: !Ref 'PublicSubnet2'
  pubsub3:
    Description: Public subnet 3 from  VPC
    Value: !Ref 'PublicSubnet3'
  pubsub4:
    Description: Public subnet 4 from  VPC
    Value: !Ref 'PublicSubnet4'
  pubsub5:
    Description: Public subnet 5 from  VPC
    Value: !Ref 'PublicSubnet5'
  prvsub1:
    Description: Private network 1 from VPC
    Value: !Ref 'PrivateSubnet1'
  prvsub2:
    Description: Private network 2 from  VPC
    Value: !Ref 'PrivateSubnet2'
  prvsub3:
    Description: Private network 3 from  VPC
    Value: !Ref 'PrivateSubnet3'
  prvsub4:
    Description: Private network 4 from VPC
    Value: !Ref 'PrivateSubnet4'
  prvsub5:
    Description: Private network 5 from  VPC
    Value: !Ref 'PrivateSubnet5'
  OpsWorksSecurityGroup:
    Description: OpsWorksSecurityGroup
    Value: !Ref 'OpsWorksSecurityGroup'
  JenkinsSecurityGroup:
    Description: JenkinsSecurityGroup
    Value: !Ref 'JenkinsSecurityGroup'
  VPNSecurityGroup:
    Description: VPNSecurityGroup
    Value: !Ref 'VPNSecurityGroup'
  IcingaSecurityGroup:
    Description: IcingaSecurityGroup
    Value: !Ref 'IcingaSecurityGroup'
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone1:
    Type: String
  AvailabilityZone2:
    Type: String
  AvailabilityZone3:
    Type: String
  AvailabilityZone4:
    Type: String
  AvailabilityZone5:
    Type: String
  pubcidr1:
    Type: String
  pubcidr2:
    Type: String
  pubcidr3:
    Type: String
  pubcidr4:
    Type: String
  pubcidr5:
    Type: String
  pricidr1:
    Type: String
  pricidr2:
    Type: String
  pricidr3:
    Type: String
  pricidr4:
    Type: String
  pricidr5:
    Type: String
  vpccidr:
    Type: String
  Stackname:
    Type: String
  ShOfficeCidr:
    Type: String
    Default: 192.168.50.0/24
  InstanceTenancy:
    Default: default
    Description: 'VPC tenancy: default or dedicated'
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: either default or dedicated
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'vpccidr'
      Tags:
      - Key: Name
        Value: !Ref 'Stackname'
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: Public
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: !Ref 'InstanceTenancy'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: Public
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', IGW]]
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref 'pubcidr1'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public1]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public1]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref 'pubcidr2'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public2]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public2]]
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone3'
      CidrBlock: !Ref 'pubcidr3'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public3]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public3]]
  PublicSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone4'
      CidrBlock: !Ref 'pubcidr4'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public4]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public4]]
  PublicSubnet5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone5'
      CidrBlock: !Ref 'pubcidr5'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public5]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public5]]
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref 'pricidr1'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private1]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref 'pricidr2'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private2]]
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone3'
      CidrBlock: !Ref 'pricidr3'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private3]]
  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone4'
      CidrBlock: !Ref 'pricidr4'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private4]]
  PrivateSubnet5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone5'
      CidrBlock: !Ref 'pricidr5'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private5]]
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public]]
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet1'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet2'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet3'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociation4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet4'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociation5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet5'
      RouteTableId: !Ref 'PublicRouteTable'
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', private]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private]]
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet1'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet2'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet3'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateSubnetRouteTableAssociation4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet4'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateSubnetRouteTableAssociation5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet5'
      RouteTableId: !Ref 'PrivateRouteTable'
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATGateway1'
  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'InternetGateway'
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public]]
  InboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref 'PublicNetworkAcl'
      RuleNumber: '99'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref 'PublicNetworkAcl'
      RuleNumber: '99'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet1'
      NetworkAclId: !Ref 'PublicNetworkAcl'
  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet2'
      NetworkAclId: !Ref 'PublicNetworkAcl'
  PublicSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet3'
      NetworkAclId: !Ref 'PublicNetworkAcl'
  PublicSubnetNetworkAclAssociation4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet4'
      NetworkAclId: !Ref 'PublicNetworkAcl'
  PublicSubnetNetworkAclAssociation5:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet5'
      NetworkAclId: !Ref 'PublicNetworkAcl'
  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', private]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private]]
  InboundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref 'PrivateNetworkAcl'
      RuleNumber: '99'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
  OutBoundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref 'PrivateNetworkAcl'
      RuleNumber: '99'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
  PrivateSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet1'
      NetworkAclId: !Ref 'PrivateNetworkAcl'
  PrivateSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet2'
      NetworkAclId: !Ref 'PrivateNetworkAcl'
  PrivateSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet3'
      NetworkAclId: !Ref 'PrivateNetworkAcl'
  PrivateSubnetNetworkAclAssociation4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet4'
      NetworkAclId: !Ref 'PrivateNetworkAcl'
  PrivateSubnetNetworkAclAssociation5:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet5'
      NetworkAclId: !Ref 'PrivateNetworkAcl'
  NATGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1EIP.AllocationId
      SubnetId: !Ref 'PublicSubnet1'
  OpsWorksSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OpsWorksSecurityGroup
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref 'vpccidr'
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: !Ref 'vpccidr'
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: !Ref 'ShOfficeCidr'
      - IpProtocol: tcp
        FromPort: '5666'
        ToPort: '5666'
        CidrIp: !Ref 'vpccidr'
      Tags:
      - Key: Name
        Value: OpsWorksSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
  VPNSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: VPNSecurityGroup
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref 'vpccidr'
      - IpProtocol: udp
        FromPort: '1194'
        ToPort: '1194'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '943'
        ToPort: '943'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '1194'
        ToPort: '1194'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: VPNSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: JenkinsSecurityGroup
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref 'vpccidr'
      - IpProtocol: tcp
        FromPort: '8080'
        ToPort: '8080'
        CidrIp: !Ref 'vpccidr'
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: JenkinsSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
  IcingaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: IcingaSecurityGroup
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref 'vpccidr'
      Tags:
      - Key: Name
        Value: IcingaSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0
