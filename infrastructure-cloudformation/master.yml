AWSTemplateFormatVersion: "2010-09-09"
Description: "Main template"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "AWS Quick Start Configuration"
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
      - Label:
          default: "Environment Settings"
        Parameters:
          - StackName
          - Environment
          - PrivateDomain
          - PublicDomain
          - HostedZoneId
      - Label:
          default: "Network Configuration"
        Parameters:
          - AvailabilityZones
          - NumberOfAZs
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
      - Label:
          default: "Compute Configuration"
        Parameters:
          - EcsInstanceType
          - SpotPrice
          - DesiredCapacity
          - KeyPairName
          - MaxSize
      - Label:
          default: "Load balancer Configuration"
        Parameters:
          - Certificate
      - Label:
          default: "Service Configuration"
        Parameters:
          - MinimumHealthyPercent
          - DesiredCount
          - ContainerMemory
          - ContainerCPU
      - Label:
          default: "RDS Configuration"
        Parameters:
          - DBName
          - DBInstanceIdentifier
          - MultiAZ
          - StorageEncrypted
          - KmsKeyId
          - MasterUsername
          - MasterUserPassword
          - DBInstanceClass
          - AllocatedStorage
          - CreateReadReplica
          - Environment
          - DBSnapshotIdentifier
          - Option
          - Engine
          - DBIngressPort
          - DBEgressPort
          - StorageType
          - DefaultRDSPort
          - CreationTimeout
          - DBIpProtocol
      - Label:
          default: "Cache Configuration"
        Parameteres:
          - CacheNodeType
          - MultiAZSupport
          - NumCacheClusters
          - RedisPort
          - ReplicationGroupDescription
          - CacheIpProtocol

  ParameterLabels:
    Certificate:
      default: "SSL certificate"
    Environment:
      default: "Environment"
    StackName:
      default: "Stack Name"
    PublicDomain:
      default: "Public Domain Name"
    HostedZoneId:
      default: "Public Domain Hosted Zone ID"
    AvailabilityZones:
      default: "Availability Zones"
    KeyPairName:
      default: "Key Pair Name"
    NumberOfAZs:
      default: "Number of Availability Zones"
    PrivateSubnet1CIDR:
      default: "Private Subnet 1 CIDR"
    PrivateSubnet2CIDR:
      default: "Private Subnet 2 CIDR"
    PrivateSubnet3CIDR:
      default: "Private Subnet 3 CIDR"
    PublicSubnet1CIDR:
      default: "Public Subnet 1 CIDR"
    PublicSubnet2CIDR:
      default: "Public Subnet 2 CIDR"
    PublicSubnet3CIDR:
      default: "Public Subnet 3 CIDR"
    QSS3BucketName:
      default: "Quick Start S3 Bucket Name"
    QSS3KeyPrefix:
      default: "Quick Start S3 Key Prefix"
    VPCCIDR:
      default: "VPC CIDR"
    EcsInstanceType:
      default: "ECS Instance Type"
    SpotPrice:
      default: "Spot Price"
    MaxSize:
      default: "Maximum number of EC2 instances (min 2)"
    DesiredCapacity:
      default: "Amount of EC2 instances in the cluster (min 2)"
    PrivateDomain:
      default: "Private Domain"
    MinimumHealthyPercent:
      default: "Minimum Healthy Percent"
    DesiredCount:
      default: " Desrired Count"
    ContainerMemory:
      default: "Amount of RAM for a task running in the cluster"
    ContainerCPU:
      default: "Amount of CPU units for a task running in the cluster"

Parameters:
  Certificate:
    Type: String
    Description: "Domain certificate ARN (arn:aws:acm:us-east-1:<account_number>:certificate/<ID>)"
  Environment:
    Type: String
    Description: "Environment platform, this parameter will be used to name the resources ."
    Default: development
    AllowedValues:
      - production
      - staging
      - development
  StackName:
    Type: String
    Default: company
    Description: "This name will be used to named the resources"
  PublicDomain:
    Type: String
    Default: company.com
    Description: "Public domain name"
  HostedZoneId:
    Type: String
    Default: ""
    Description: "[IF EMPTY => will attempt to create domain on Route53]; Public domain hosted zone ID (Route 53)"
  PrivateSubnet2CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.32.0/19
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR block for private subnet 2 located in Availability Zone 2."
  PrivateSubnet3CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.64.0/19
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR block for private subnet 3 located in Availability Zone 3."
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    Default: "company-infrastructure"
    Type: String
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
  PublicSubnet2CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.144.0/20
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2"
  PublicSubnet3CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.160.0/20
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR Block for the public DMZ subnet 3 located in Availability Zone 3"
  KeyPairName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: key-us-east-1
    Description: "Public/private key pairs allow you to securely connect to your instance after it launches"
  PublicSubnet1CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.128.0/20
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1"
  PrivateSubnet1CIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.0.0/19
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR block for private subnet 1 located in Availability Zone 1."
  VPCCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Default: 10.0.0.0/16
    Type: String
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
    Description: "CIDR Block for the VPC"
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    Default: "development"
    Type: String
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a hyphen (-)."
  AvailabilityZones:
    Type: "List<AWS::EC2::AvailabilityZone::Name>"
    Description: "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved. 1 or 3 AZs are used for this deployment."
  NumberOfAZs:
    Default: 3
    AllowedValues:
      - 2
      - 3
    Description: "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter."
    Type: String
  EcsInstanceType:
    Description: "ECS instance type."
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - c4.large
      - c4.xlarge
  SpotPrice:
    Description: If spot price is 0, then EC2(OnDemand) will be used, otherwise spot instances will be used.
    Type: Number
    Default: 0
    MinValue: 0
  MaxSize:
    Description: Max cluster size.
    Type: String
    Default: 5
  DesiredCapacity:
    Type: String
    Default: 2
  PrivateDomain:
    Description: Private Domain for internal service discovery.
    Type: String
    Default: company-development.internal

  MinimumHealthyPercent:
    Type: Number
    Description: "Minimum Healthy Percent for ECS services"
    Default: 0
    MinValue: 0
    MaxValue: 100
  DesiredCount:
    Type: Number
    Description: "Desired Deployment Count for ECS services"
    Default: 0
    MinValue: 0
    MaxValue: 100
  ContainerMemory:
    Type: String
    Description: Ram memory allocation for a task running in the cluster.
    Default: 512
  ContainerCPU:
    Type: String
    Description: CPU units allocated for a task running in the cluster.
    Default: 512
  DBName:
    Type: String
    Description: Name of database
    Default: company-db
  DBInstanceIdentifier:
    Type: String
    Description: Name of RDS instance
    Default: company-rds
  MultiAZ:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  StorageEncrypted:
    Description: If you define a KmsKeyID you have to encrypt the storage.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  KmsKeyId:
    Type: String
    Description: Master key that's used to decrypt the instance
  MasterUsername:
    Type: String
    Description: Username for database
    Default: root
  MasterUserPassword:
    Type: String
    NoEcho: true
    Description: Password for database
    Default: company-password
  DBInstanceClass:
    Type: String
    Description: Name of the compute and capacity classes of the database
    Default: db.t2.small
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.medium
      - db.t2.large
      - db.m4.large
      - db.m4.xlarge
      - db.c4.large
      - db.c4.xlarge
  AllocatedStorage:
    Type: Number
    Default: 20
    Description: Storage size on disk in GB of RDS
  CreateReadReplica:
    Type: String
    Description: Condition to create read replica
    Default: false
    AllowedValues:
      - true
      - false
  DBSnapshotIdentifier:
    Type: String
  Option:
    Type: String
    Default: new
    AllowedValues:
      - new
      - skip
      - restore
  Engine:
    Type: String
    Description: Engine used for RDS
    Default: mysql
    AllowedValues:
      - mysql
      - postgres
      - mariadb
      - aurora
      - aurora-mysql
      - aurora-postgresql
      - oracle-ee
      - oracle-se
      - oracle-se1
      - oracle-se2
      - sqlserver-ee
      - sqlserver-se
      - sqlserver-ex
      - sqlserver-web
  DBIngressPort:
    Type: Number
    Description: Inbound port for RDS instance
    Default: 3306
  DBEgressPort:
    Type: Number
    Description: Outbound port for RDS instance
    Default: 3306
  StorageType:
    Type: String
    Description: Storage Type to be associated with the DB instance
    Default: standard
    AllowedValues:
      - standard
      - gp2
      - io1
  DefaultRDSPort:
    Type: Number
    Description: Default port for DB endpoint
    Default: 3306
  CreationTimeout:
    Type: String
    Description: Duration of timeout for DB instance creation
    Default: PT24H
  DBIpProtocol:
    Type: String
    Description: Protocol for security group
    Default: tcp
  CacheNodeType:
    Description: The instance type the nodes will launch under.
    Type: String
    Default: cache.t2.small
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m3.medium
      - cache.m3.large
      - cache.m3.xlarge
      - cache.m3.2xlarge
      - cache.r3.large
      - cache.r3.xlarge
      - cache.r3.2xlarge
      - cache.r3.4xlarge
      - cache.r3.8xlarge
  MultiAZSupport:
    Description: >-
      Indicates whether Multi-AZ is enabled. When Multi-AZ is enabled, a
      read-only replica is automatically promoted to a read-write primary
      cluster if the existing primary cluster fails. If you specify true, you
      must specify a value greater than 1 for the NumCacheClusters property.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  NumCacheClusters:
    Description: >-
      The number of cache clusters for this replication group. If MultiAZ
      support is enabled, you must specify a value greater than 1.
    Default: '2'
    Type: Number
    MinValue: '1'
    MaxValue: '6'
  RedisPort:
    Description: >-
      The port number on which each member of the replication group accepts
      connections.
    Type: Number
    Default: '6379'
    MinValue: '1'
    MaxValue: '65535'
  ReplicationGroupDescription:
    Description: The description of the replication group.
    Type: String
    Default: Example replication group
  CacheIpProtocol:
    Description: Cache Security Group Protocol
    Default: tcp
    Type: String

Mappings:
  Environment:
    development:
      Name: dev
    staging:
      Name: staging
    production:
      Name: prod

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/network/vpc.yml"
      Parameters:
        AvailabilityZones: !Join [",", !Ref AvailabilityZones]
        NumberOfAZs: !Ref NumberOfAZs
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PublicSubnet3CIDR: !Ref PublicSubnet3CIDR
        VPCCIDR: !Ref VPCCIDR
        StackName: !Ref StackName
        Environment: !Ref Environment
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}

  EcsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/compute/ecs-cluster.yml"
      Parameters:
        ClusterName: !Sub ${StackName}-${Environment}
        InstanceType: !Ref EcsInstanceType
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SpotPrice: !Ref SpotPrice
        KeyPair: !Ref KeyPairName
        SubnetIds: !Join [ ",", [!GetAtt [VPCStack, Outputs.PrivateSubnet1AID], !GetAtt [VPCStack, Outputs.PrivateSubnet2AID], !GetAtt [VPCStack, Outputs.PrivateSubnet3AID]]]
        VpcId: !GetAtt VPCStack.Outputs.VPCID
        DesiredCapacity: !Ref DesiredCapacity
        MaxSize: !Ref MaxSize
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}

  ALBLogs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/storage/alb-logs-s3.yml"

  PublicLoadBalancer:
    DependsOn:
      - EcsStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/applications/loadbalancer.yml"
      Parameters:
        LoadBalancerName: !Sub ${StackName}-${Environment}-public
        Scheme: internet-facing # internal or internet-facing
        Domain: !Ref PublicDomain
        Environment: !Ref Environment
        HostedZoneId: !Ref  HostedZoneId
        Certificate: !Ref Certificate
        SubnetIds: !Join [ ",", [!GetAtt [VPCStack, Outputs.PublicSubnet1ID], !GetAtt [VPCStack, Outputs.PublicSubnet2ID], !GetAtt [VPCStack, Outputs.PublicSubnet3ID]]]
        VpcId: !GetAtt VPCStack.Outputs.VPCID
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}
        - Key: LoadBalancer
          Value: Public

  # PrivateLoadBalancer:
  #   DependsOn:
  #     - EcsStack
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/applications/loadbalancer.yml"
  #     Parameters:
  #       LoadBalancerName: !Sub ${StackName}-${Environment}-private
  #       Scheme: internal # internal or internet-facing
  #       Domain: !Ref PrivateDomain # Always internal, public DNS are handle diferent
  #       Environment: !Ref Environment
  #       Certificate: !Ref Certificate
  #       SubnetIds: !Join [ ",", [!GetAtt [VPCStack, Outputs.PrivateSubnet1AID], !GetAtt [VPCStack, Outputs.PrivateSubnet2AID], !GetAtt [VPCStack, Outputs.PrivateSubnet3AID]]]
  #       VpcId: !GetAtt VPCStack.Outputs.VPCID
  #     Tags:
  #       - Key: StackName
  #         Value: !Sub ${StackName}-${Environment}
  #       - Key: LoadBalancer
  #         Value: Private

  ServiceA:
    DependsOn:
      - PublicLoadBalancer
      # - PrivateLoadBalancer
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/applications/services.yml"
      Parameters:
        ServiceName: "serviceA"
        Environment: !Ref Environment
        DesiredCount: !Ref DesiredCount
        Priority: '1' # LoadBalancer Priority, needs to be unique on the LB (Listener Rule Priority)
        Subdomain: !Sub
          - my.${env}
          - {env: !FindInMap [Environment, !Ref Environment, Name]}
        StackName: !Ref StackName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        Cluster: !GetAtt EcsStack.Outputs.EcsCluster
        ContainerPort: '7080'
        MinimumHealthyPercent: !Ref MinimumHealthyPercent
        VpcId: !GetAtt VPCStack.Outputs.VPCID
        PrivateDNS: !GetAtt PublicLoadBalancer.Outputs.PrivateDNS
        LoadBalancerHttpListenerArn: !GetAtt PublicLoadBalancer.Outputs.HttpListenerArn
        LoadBalancerHttpsListenerArn: !GetAtt PublicLoadBalancer.Outputs.HttpsListenerArn
        CanonicalHostedZoneID: !GetAtt PublicLoadBalancer.Outputs.CanonicalHostedZoneID
        LoadBalancerDomain: !GetAtt PublicLoadBalancer.Outputs.LoadBalancerDomain
        PrivateDomain: !GetAtt PublicLoadBalancer.Outputs.PrivateDomain
        ContainerMemory: !Ref ContainerMemory
        ContainerCPU: !Ref ContainerCPU
      Tags:
        - Key: StackName
          Value: !Sub ${StackName}-${Environment}

  StackDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/database/rds.yaml"
      Parameters:
        Environment: !Sub ${Environment}-db
        VpcId: !GetAtt VPCStack.Outputs.VPCID
        VPCSubnetsIds: !GetAtt VPCStack.Outputs.PrivateSubnetsList
        VPCPrivateSG: !GetAtt EcsStack.Outputs.SecurityGroup
        DBName: !Sub ${AWS::StackName}-db
        DBInstanceIdentifier: !Sub ${AWS::StackName}-db-instance
        Engine: !Ref Engine
        MultiAZ: !Ref MultiAZ
        StorageEncrypted: !Ref StorageEncrypted
        KmsKeyId: !Ref KmsKeyId
        MasterUsername: !Ref MasterUsername
        MasterUserPassword: !Ref MasterUserPassword
        DBInstanceClass: !Ref DBInstanceClass
        AllocatedStorage: !Ref AllocatedStorage
        CreateReadReplica: !Ref CreateReadReplica
        DBSnapshotIdentifier: !Ref DBSnapshotIdentifier
        Option: !Ref Option
        DBIngressPort: !Ref DBIngressPort
        DBEgressPort: !Ref DBEgressPort
        DBIpProtocol: !Ref DBIpProtocol
        StorageType: !Ref StorageType
        DefaultRDSPort: !Ref DefaultRDSPort
        CreationTimeout: !Ref CreationTimeout

  StackElasticache:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/database/elasticache.yaml"
      Parameters:
        CacheNodeType: !Ref CacheNodeType
        MultiAZSupport: !Ref MultiAZSupport
        NumCacheClusters: !Ref NumCacheClusters
        RedisPort: !Ref RedisPort
        ReplicationGroupDescription: !Ref ReplicationGroupDescription
        VpcId: !GetAtt VPCStack.Outputs.VPCID
        VPCPrivateSG: !GetAtt EcsStack.Outputs.SecurityGroup
        SubnetIds: !GetAtt VPCStack.Outputs.CacheSubnets
        Environment: !Sub ${Environment}-cache
        CacheIpProtocol: !Ref CacheIpProtocol
