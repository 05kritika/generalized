Description: Template for creating the VPC
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone1:
    Type: String
  AvailabilityZone2:
    Type: String
  pubcidr1:
    Type: String
  pubcidr2:
    Type: String
  pricidr1:
    Type: String
  pricidr2:
    Type: String
  vpccidr:
    Type: String
  Stackname:
    Type: String
  InstanceTenancy:
    Default: default
    Description: 'VPC tenancy: default or dedicated'
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: either default or dedicated
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'vpccidr'
      Tags:
      - Key: Name
        Value: !Ref 'Stackname'
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: Public
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: !Ref 'InstanceTenancy'
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref 'pubcidr1'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public1]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public1]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref 'pubcidr2'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public2]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public2]]
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone1'
      CidrBlock: !Ref 'pricidr1'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private1]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Ref 'AvailabilityZone2'
      CidrBlock: !Ref 'pricidr2'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private2]]
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', public]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', public]]
  PrivateRouteTableZone1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', private, zone1]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private, zone1]]
  PrivateRouteTableZone2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: !Join ['-', [!Ref 'Stackname', private, zone2]]
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', private, zone2]]
  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'InternetGateway'
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PrivateRouteTableZone1'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATGateway1'
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'PrivateRouteTableZone2'
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref 'NATGateway2'
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet1'
      RouteTableId: !Ref 'PrivateRouteTableZone1'
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet2'
      RouteTableId: !Ref 'PrivateRouteTableZone2'
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet1'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PublicSubnet2'
      RouteTableId: !Ref 'PublicRouteTable'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Application
        Value: !Ref 'Stackname'
      - Key: Network
        Value: Public
      - Key: Name
        Value: !Join ['-', [!Ref 'Stackname', IGW]]
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'
  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1EIP.AllocationId
      SubnetId: !Ref 'PublicSubnet1'
  NATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway2EIP.AllocationId
      SubnetId: !Ref 'PublicSubnet2'
  NATGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
Outputs:
  VpcId:
    Description: VPC created
    Value: !Ref 'VPC'
  pubsub1:
    Description: Public subnet 1 from  VPC
    Value: !Ref 'PublicSubnet1'
  pubsub2:
    Description: Public subnet 2 from  VPC
    Value: !Ref 'PublicSubnet2'
  prvsub1:
    Description: Private network 1 from VPC
    Value: !Ref 'PrivateSubnet1'
  prvsub2:
    Description: Private network 2 from  VPC
    Value: !Ref 'PrivateSubnet2'
