Description: |
  demo infrastructure CFN templates.
  Full stack infrastructure:
    VPC
    ALB
    ECS
    RDS
    Listener
    Service
Parameters:
  TemplateBucket:
    Description: S3 bucket name and subfolders containing the tempalates for the
      nested stack 'https://s3.amazonaws.com/<bucketname></path>'
    Type: String
  EnvironmentType:
    Type: String
    Default: staging
  ECRrails:
    Type: String
    Default: demo_rails
  #VPC
  AvailabilityZone1:
    Type: String
    Default: us-west-1a
  AvailabilityZone2:
    Type: String
    Default: us-west-1b
  CIDR:
    Type: String
    Default: 10.10.0.0/16
  PublicCIDR1:
    Type: String
    Default: 10.10.1.0/24
  PublicCIDR2:
    Type: String
    Default: 10.10.2.0/24
  PrivateCIDR1:
    Type: String
    Default: 10.10.10.0/24
  PrivateCIDR2:
    Type: String
    Default: 10.10.20.0/24
  InstanceTenancy:
    Default: default
    Description: 'VPC tenancy: default or dedicated'
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: either default or dedicated
  #ECS
  ClusterName:
    Type: String
    Default: ecs-production
  InstanceType:
    Description: Container instances EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - x1.32xlarge
      - x1.16xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyPair:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the container
      instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be a valid EC2 keypair.
  DesiredCapacity:
    Type: Number
    Default: 1
    Description: Number of instances to launch in your ECS cluster.
  MaxSize:
    Type: Number
    Description: Maximum number of instances that can be launched in your ECS cluster.
  ARNCertificate:
    Type: String
    Description: Certificate ARN resource.
    Default: ""
  ALBPort:
    Type: String
    Default: 80
  #Database
  DBName:
    Type: String
    Default: demo_db
  DBInstanceIdentifier:
    Type: String
    Default: prod-demo-db
  InstanceClass:
    Description: Name of the compute and capacity clasess of the database
    Default: db.t2.nano
    Type: String
  DBUsername:
    Description: Username for database
    Type: String
  DBPassword:
    Description: Password for database
    Type: String
    NoEcho: true
  MultiAZ:
    Description: Specifies if the database instance is a multiple Availability Zone deployment
    Type: String
    Default: true
    AllowedValues:
      -   true
      -   false
  StorageEncrypted:
    Description: If you define a KmsKeyID you have to encrypt the storage.
    Type: String
    Default: true
    AllowedValues:
      -   true
      -   false
  KmsKeyId:
    Description: Master key that's used to encrypt the DB instance
    Type: String
  CreateReadReplica:
    Type: String
    Default: true
    AllowedValues:
      -   true
      -   false
  AllocatedStorage:
    Description: Allocated storage size fot the db (GB)
    Default: 100
    Type: Number
  RDSEndpoint:
    Type: String
    Description: Use an existing RDS instance
  #Service
  ServiceName:
    Type: String
    Default: service_demo
  ImageTag:
    Description: Docker image tag for Web api
    Type: String
    Default: latest
  ContainerPort:
    Description: Port of Web api on docker
    Type: String
    Default: 80
  NumberOfTask:
    Description: Number of running containers in the cluster for this docker image
    Type: String
    Default: 0
  MemoryOfTask:
    Type: Number
    Default: 500
    Description: Memory hard reservation for service
  CPUOfTask:
    Type: Number
    Default: 500
    Description: CPU hard reservation for service
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CloudFormation Configuration"
        Parameters:
          - TemplateBucket
          - EnvironmentType
          - ECRrails
      - Label:
          default: "VPC Configuration"
        Parameters:
          - AvailabilityZone1
          - AvailabilityZone2
          - CIDR
          - PublicCIDR1
          - PublicCIDR2
          - PrivateCIDR1
          - PrivateCIDR2
          - InstanceTenancy
      - Label:
          default: "ALB Configuration"
        Parameters:
          - ALBPort
          - ARNCertificate
          - ContainerPort
      - Label:
          default: "ECS Cluster Configuration"
        Parameters:
          - ClusterName
          - InstanceType
          - KeyPair
          - DesiredCapacity
          - MaxSize
      - Label:
          default: "RDS Configuration"
        Parameters:
          - DBName
          - DBInstanceIdentifier
          - InstanceClass
          - DBUsername
          - DBPassword
          - MultiAZ
          - StorageEncrypted
          - KmsKeyId
          - CreateReadReplica
          - AllocatedStorage
          - RDSEndpoint
      - Label:
          default: "Service demo"
        Parameters:
          - ServiceName
          - ImageTag
          - NumberOfTask
          - MemoryOfTask
          - CPUOfTask
Conditions:
  Production: !Equals [ !Ref EnvironmentType, production ]
  CreateHTTPS: !Not [ !Equals [ !Ref ARNCertificate, "" ]]
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/network/vpc.yaml'
      Parameters:
        KeyName: !Ref KeyPair
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        pubcidr1: !Ref PublicCIDR1
        pubcidr2: !Ref PublicCIDR2
        pricidr1: !Ref PrivateCIDR1
        pricidr2: !Ref PrivateCIDR2
        vpccidr: !Ref CIDR
        Stackname: !Ref AWS::StackName
        InstanceTenancy: !Ref InstanceTenancy
  ECRRepositoryRails:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: !Ref ECRrails
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - "*"
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/applications/loadbalancer.yaml'
      Parameters:
        ALBPort: 80
        LoadBalancerSubnets: !Join
          - ','
          - - !GetAtt VPC.Outputs.pubsub1
            - !GetAtt VPC.Outputs.pubsub2
        Certificate: !Ref ARNCertificate
        VpcId: !GetAtt VPC.Outputs.VpcId
        ContainerPort: !Ref ContainerPort
        ClusterName: !Ref ClusterName
  ECSCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/compute/ecs.yaml'
      Parameters:
        KeyPair: !Ref 'KeyPair'
        ECSSubnets: !Join
          - ','
          - - !GetAtt VPC.Outputs.prvsub1
            - !GetAtt VPC.Outputs.prvsub2
        VpcId: !GetAtt VPC.Outputs.VpcId
        InstanceType: !Ref 'InstanceType'
        DesiredCapacity: !Ref 'DesiredCapacity'
        MaxSize: !Ref 'MaxSize'
        ClusterName: !Ref ClusterName
        LoadBalancerSecurityGroup: !GetAtt ALB.Outputs.LoadBalancerSecurityGroup
  RDSMysql:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/database/rds.yaml'
      Parameters:
        VPCSubnetsIds: !Join
          - ','
          - - !GetAtt VPC.Outputs.prvsub1
            - !GetAtt VPC.Outputs.prvsub2
        VpcId: !GetAtt VPC.Outputs.VpcId
        VPCPrivateSG: !GetAtt ECSCluster.Outputs.ContainerInstancesSecurityGroup
        DBName: !Ref DBName
        DBInstanceIdentifier: !Ref DBInstanceIdentifier
        MultiAZ: !Ref MultiAZ
        StorageEncrypted: !Ref StorageEncrypted
        KmsKeyId: !Ref KmsKeyId
        MasterUsername: !Ref DBUsername
        MasterUserPassword: !Ref DBPassword
        DBInstanceClass: !Ref InstanceClass
        AllocatedStorage: !Ref AllocatedStorage
        RDSEndpoint: !Ref RDSEndpoint
        CreateReadReplica: !Ref CreateReadReplica
  ALBListenerRule:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/applications/listenerRules.yaml'
      Parameters:
        Listener: !GetAtt ALB.Outputs.Listener
        HTTPSListener: !If [CreateHTTPS, !GetAtt ALB.Outputs.HTTPSListener, ""]
        TargetGroup: !GetAtt ALB.Outputs.TargetGroup
        Path: /*
        Priority: 1
  Servicedemo:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/applications/demo.yaml'
      Parameters:
        Listener: !GetAtt ALBListenerRule.Outputs.ListenerArn
        VpcId: !GetAtt VPC.Outputs.VpcId
        ImageTag: !Ref ImageTag
        TaskCount: !Ref NumberOfTask
        ContainerPort: !Ref ContainerPort
        ContainerMemory: !Ref MemoryOfTask
        ContainerCPU: !Ref CPUOfTask
        ECSCluster: !GetAtt ECSCluster.Outputs.Cluster
        ServiceName: !Ref ServiceName
        TargetGroup: !GetAtt ALB.Outputs.TargetGroup
        RailsECR: !Ref ECRrails
