Description: RDS Resource

Parameters:
  VPCSubnetsIds:
    Description: Choose which subnets this cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Type: String
  VPCPrivateSG:
    Type: String
  DBName:
    Type: String
  DBInstanceIdentifier:
    Type: String
  MultiAZ:
    Type: String
  StorageEncrypted:
    Type: String
  KmsKeyId:
    Type: String
  MasterUsername:
    Type: String
  MasterUserPassword:
    Type: String
  DBInstanceClass:
    Type: String
  AllocatedStorage:
    Type: Number
  RDSEndpoint:
    Type: String
  CreateReadReplica:
    Type: String
Conditions:
  CreateRDS: !Equals [ !Ref RDSEndpoint, "" ]
  CreateReplica: !And
    - !Equals [!Ref CreateReadReplica, "true"]
    - !Condition CreateRDS
  NotEncrypted: !Equals [ !Ref KmsKeyId, ""]
Resources:
  DatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${DBName} SG"
      GroupDescription: !Sub ${AWS::StackName} database
      VpcId: !Ref VpcId
      SecurityGroupIngress:
          #MySql
        - SourceSecurityGroupId: !Ref VPCPrivateSG
          FromPort: '3306'
          IpProtocol: tcp
          ToPort: '3306'
      Tags:
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: Name
          Value: !Sub "${DBName} SG"
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "RDS Subnet Group"
      SubnetIds: !Ref VPCSubnetsIds
      Tags:
        - Key: Name
          Value: !Sub "${DBName} Subnet Group"
  DBInstance:
    Type: AWS::RDS::DBInstance
    Condition: CreateRDS
    Properties:
      # DBName: !Ref DBName
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      Engine: MySQL
      MultiAZ: !Ref MultiAZ
      StorageEncrypted: !If
        - NotEncrypted
        - !Ref AWS::NoValue
        - !Ref StorageEncrypted
      KmsKeyId: !If
        - NotEncrypted
        - !Ref AWS::NoValue
        - !Ref KmsKeyId
      MasterUsername: !Ref MasterUsername
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      MasterUserPassword: !Ref MasterUserPassword
      VPCSecurityGroups:
      - !Ref DatabaseSG
      DBSubnetGroupName:
        Ref: "DBSubnetGroup"
      Tags:
        - Key: Name
          Value: !Ref DBName
    CreationPolicy:
      ResourceSignal:
        Timeout: PT24H
  ReplicaDB:
    DeletionPolicy: Delete
    Type: AWS::RDS::DBInstance
    Condition: CreateReplica
    Properties:
      SourceDBInstanceIdentifier: !Ref DBInstance
      DBInstanceIdentifier: !Sub ${DBInstanceIdentifier}-replica
      DBInstanceClass: !Ref DBInstanceClass
      Tags:
      - Key: Name
        Value: !Sub '${DBName}-replica'
Outputs:
  DBEndpointAddress:
    Description: Endpoint for the instance
    Value: !If [CreateRDS, !GetAtt DBInstance.Endpoint.Address, !Ref RDSEndpoint]
  DBEndpointPort:
    Description: Port for the instance
    Value: !If [CreateRDS, !GetAtt DBInstance.Endpoint.Port, 3306]
