---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Efabless EFS template.
  Author: Ahmed A. Agiza (ahmed.agiza@efabless.com)

Parameters:
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC to host the ECS service

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet Ids to host the ECS service

  FileSystemName:
    Type: String
    Description: The name of the EFS volume

  EncryptEFS:
    Type: String
    Default: false
    Description: Whether to encrypt the EFS or not
    AllowedValues: [ true, false ]

  SourceSecurityGroupId:
    Type: String
    Description: Security Group Id to allow traffic
    Default: ''

  OwnerName:
    Type: String
    Default: efabless
    Description: An arbitrary tag name for the owner of these resources

  StackName:
    Type: String
    Description: The name of the stack to which these resources belong

  Environment:
    Type: String
    Default: dev
    AllowedValues: [ prod, stage, dev, qa ]
    Description: Environment name to append to resources names and tags

Conditions:

  AddSecurityGroupRule: !Not [ !Equals [ !Ref SourceSecurityGroupId, '' ] ]

Resources:

  # ########## Security Groups #########

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Allow TCP traffic on port 2049
      SecurityGroupIngress:
      - !If
        - AddSecurityGroupRule
        - { IpProtocol: 6, SourceSecurityGroupId: !Ref SourceSecurityGroupId, FromPort: 2049, ToPort: 2049 }
        - !Ref AWS::NoValue
      SecurityGroupEgress:
      - { IpProtocol: -1, CidrIp: "0.0.0.0/0" }
      Tags:
      - Key: Name
        Value: !Sub ${FileSystemName}-${Environment}-efs-sg
      - Key: Owner
        Value: !Ref OwnerName
      - Key: StackName
        Value: !Ref StackName
      - Key: Environment
        Value: !Ref Environment

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties: 
      Encrypted: !Ref EncryptEFS
      FileSystemTags: 
      - Key: Name
        Value: !Sub ${FileSystemName}-${Environment}-efs
      - Key: Owner
        Value: !Ref OwnerName
      - Key: StackName
        Value: !Ref StackName
      - Key: Environment
        Value: !Ref Environment

  MountTarget1:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref FileSystem
      SubnetId: !Select [ 0, !Ref SubnetIds ]
      SecurityGroups: 
      - !Ref SecurityGroup

  MountTarget2:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref FileSystem
      SubnetId: !Select [ 1, !Ref SubnetIds ]
      SecurityGroups: 
      - !Ref SecurityGroup

  MountTarget3:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref FileSystem
      SubnetId: !Select [ 2, !Ref SubnetIds ]
      SecurityGroups: 
      - !Ref SecurityGroup

Outputs:

    FileSystemId:
      Description: The ID of the created EFS
      Value: !Ref FileSystem

    FileSystemDNS:
      Description: The DNS of the created EFS
      Value: !Join [ '.', [ !Ref FileSystem, 'efs', !Ref 'AWS::Region', 'amazonaws', 'com' ] ]

    SecurityGroupId:
      Description: The Security Group of the EFS mount target
      Value: !Ref SecurityGroup
