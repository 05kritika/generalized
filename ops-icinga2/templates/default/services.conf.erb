######################################################################################
## Autogenerated by Chef.
######################################################################################

apply Service "Load" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_load"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups

  vars.pnp_check_arg1 = "!$nrpe_command$"
}

apply Service "Time" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_ntp_time"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups
}

apply Service "check_open_file" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_open_file"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups
}
apply Service "check_mem" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  #vars.nrpe_command = "check_mem"
  vars.nrpe_command = "check_mem_custom!98,100!101,101"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups,
  ignore where "elasticsearch" in host.groups
}
apply Service "check_mem_es" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_mem_custom!100,100!100,100"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "elasticsearch" in host.groups
}
apply Service "check_es_proc" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_es_proc"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "elasticsearch" in host.groups
}
apply Service "check_es_status" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_es_status!127.0.0.1"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "elasticsearch" in host.groups
}

apply Service "check_io" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_io"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups
}
apply Service "check_cpu" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_cpu"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups,
  ignore where "elasticsearch" in host.groups
}
apply Service "check_cpu_es" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_cpu"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "elasticsearch" in host.groups
}

apply Service "tcp80" {
  import "generic-service"
  import "pnp-svc"

  check_command = "tcp"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  vars.tcp_port = "80"
  assign where "app" in host.groups
}
apply Service "tcp443" {
  import "generic-service"
  import "pnp-svc"

  check_command = "tcp"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  vars.tcp_port = "443"
  assign where "app" in host.groups
}
apply Service "Nginx status" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_nginx_status!127.0.0.1!81"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "app" in host.groups
}
#apply Service "Nginx Https Certificate will be invalid soon" {
#  import "generic-service"
#  check_command = "nrpe"
#  vars.nrpe_command = "check_ssl_cert"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  assign where "app" in host.groups
#}
apply Service "Redis check" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_redis!127.0.0.1!6379!2000!4000"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "redis" in host.groups
}

apply Service "Redis check Key" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_redis_key"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "redis" in host.groups
}

#apply Service "ChatScript Check" {
#  import "generic-service"
#  import "pnp-svc"
#
#  check_command = "nrpe"
#  vars.nrpe_command = "check_tcp!127.0.0.1!1024"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  vars.tcp_port = "5672"
#  assign where "chatscript" in host.groups
#}
apply Service "chatscript-procs" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_procs_no_args!LinuxChatScript!2"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  vars.tcp_port = "5672"
  assign where "chatscript" in host.groups
}

apply Service "Apache HTTPD Responding" {
  import "generic-service"
  check_command = "nrpe"
  vars.nrpe_command = "check_url!127.0.0.1!127.0.0.1!8080"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "jenkins-servers" in host.groups
}
#apply Service "Apache Https Threads In KeepAlive State" {
#  import "generic-service"
#  check_command = "nrpe"
#  vars.nrpe_command = "check_apache_https!443!threads_keepalive!100!100"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  assign where "jenkins-servers" in host.groups
#}
apply Service "Apache Https Threads In Logging state : Possible I/O bottleneck" {
  import "generic-service"
  check_command = "nrpe"
  vars.nrpe_command = "check_apache_https!443!threads_logging!100!100"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "api" in host.groups
}
apply Service "Apache Https Threads - Open Slot : Too low : Increase MaxClients or ServerLimit" {
  import "generic-service"
  check_command = "nrpe"
  vars.nrpe_command = "check_apache_https!443!slots_open!10:!3:"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "api" in host.groups
}
apply Service "Apache Https Threads - Idle Threads : Too low : Increase MinSpareThreads" {
  import "generic-service"
  check_command = "nrpe"
  vars.nrpe_command = "check_apache_https!443!idle_threads!3:!2:"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "api" in host.groups
}
apply Service "Apache Https Certificate will be invalid soon" {
  import "generic-service"
  check_command = "nrpe"
  vars.nrpe_command = "check_ssl_cert"
  #vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "api" in host.groups
}

apply Service "check_uptime" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_uptime"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
assign where "all" in host.groups
}
apply Service "Disk" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_all_disks"
  vars.sla = "24x7"
  check_interval = 10
  retry_interval = 10
  max_check_attempts = 10
  assign where "all" in host.groups
}

apply Service "ssh" {
  import "generic-service"
  import "pnp-svc"

  check_command = "ssh"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "all" in host.groups
}

apply Service "tcp80" {
  import "generic-service"
  import "pnp-svc"

  check_command = "tcp"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  vars.tcp_port = "80"
  assign where "api" in host.groups
}

# Rabbit MQ:
#apply Service "RabbitMQ Server Aliveness Check" {
#  import "generic-service"
#  check_command = "nrpe"
#  vars.nrpe_command = "check_rabbitmq_aliveness"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  assign where "rabbitmq" in host.groups
#}
#
#apply Service "RabbitMQ Server Objects Check" {
#  import "generic-service"
#  check_command = "nrpe"
#  vars.nrpe_command = "check_rabbitmq_objects"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  assign where "rabbitmq" in host.groups
#}
#
#apply Service "RabbitMQ Server Overview Check" {
#  import "generic-service"
#  check_command = "nrpe"
#  vars.nrpe_command = "check_rabbitmq_overview"
#  vars.sla = "24x7"
#  check_interval = 5
#  retry_interval = 3
#  max_check_attempts = 5
#  assign where "rabbitmq" in host.groups
#}
#
apply Service "RabbitMQ Server Overview Check" {
  import "generic-service"
  import "pnp-svc"
  check_command = "nrpe"
  vars.nrpe_command = "check_rabbitmq_overview!<%=node['rabbitmq']['icinga']['user']['name']%>!<%=node['rabbitmq']['icinga']['user']['pass']%>"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "rabbitmq" in host.groups
}
apply Service "RabbitMQ Queue Statistics" {
  import "generic-service"
  import "pnp-svc"
  check_command = "nrpe"
  vars.nrpe_command = "check_rabbitmq_statistics!<%=node['rabbitmq']['icinga']['user']['name']%>!<%=node['rabbitmq']['icinga']['user']['pass']%>"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "rabbitmq" in host.groups
}
apply Service "tcp5672" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_tcp!127.0.0.1!5672"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  vars.tcp_port = "5672"
  assign where "rabbitmq" in host.groups
}

apply Service "celery worker" {
  import "generic-service"
  import "pnp-svc"

  check_command = "nrpe"
  vars.nrpe_command = "check_celery_proc"
  vars.sla = "24x7"
  check_interval = 5
  retry_interval = 3
  max_check_attempts = 5
  assign where "celery" in host.groups
}
